from telebot.async_telebot import AsyncTeleBot
from telebot.types import Message

from tgbot.services.api_worker.client import APIWorker
from tgbot.services.user import UsersFactory
from tgbot.services.utils.message_tools import send_status_task_smile


@send_status_task_smile()
async def personal_info(message: Message, bot: AsyncTeleBot):
    api = APIWorker()
    user = await UsersFactory().get_user(message)

    token = await user.token
    user_id = await user.user_id

    data = await api.get_self(token, user_id)
    translate_map = {
        "name": "–ò–º—è",
        "date_of_birth": "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è",
        "phone": "–¢–µ–ª–µ—Ñ–æ–Ω",
        "email": "–ü–æ—á—Ç–∞",
        "address": "–ê–¥—Ä–µ—Å",
        "institute": "–ò–Ω—Å—Ç–∏—Ç—É—Ç",
        "direction_of_study": "–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –æ–±—É—á–µ–Ω–∏—è",
        "group_study": "–£—á–µ–±–Ω–∞—è –≥—Ä—É–ø–ø–∞",
        "platoon_number": "–ù–æ–º–µ—Ä –≤–∑–≤–æ–¥–∞",
        "squad_number": "–ù–æ–º–µ—Ä –æ—Ç–¥–µ–ª–µ–Ω–∏—è",
        "role": "–†–æ–ª—å",
    }

    format_data = ""

    for k, v in data.items():
        if k in translate_map:
            format_data += f"üîµ {translate_map[k]}:  {v}\n"

    await bot.send_message(message.chat.id, f"{format_data}")
